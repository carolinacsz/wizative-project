{"version":3,"sources":["components/Footer.js","components/Hero.js","pages/HomePage.js","pages/AboutPage.js","pages/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["Footer","Hero","props","Jumbotron","className","Container","fluid","Row","Col","md","sm","title","subTitle","text","HomePage","AboutPage","ContactPage","App","state","headerLinks","path","home","about","contact","Navbar","bg","expand","to","Brand","Toggle","aria-controls","Collapse","id","Nav","exact","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4UAyBeA,MApBf,a,QCiBeC,MAnBf,SAAcC,GAEV,OACI,kBAACC,EAAA,EAAD,CAAWC,UAAU,+BACjB,kBAACC,EAAA,EAAD,CAAWC,OAAO,GACd,kBAACC,EAAA,EAAD,CAAKH,UAAU,kCACX,kBAACI,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACVR,EAAMS,OAAS,wBAAIP,UAAU,0CAA0CF,EAAMS,OAC7ET,EAAMU,UAAY,wBAAIR,UAAU,cAAcF,EAAMU,UACpDV,EAAMW,MAAQ,wBAAIT,UAAU,0CAA0CF,EAAMW,WCDvFC,MAPf,SAAkBZ,GAEd,OACI,kBAAC,EAAD,CAAMS,MAAOT,EAAMS,MAAOC,SAAUV,EAAMU,SAAUC,KAAMX,EAAMW,QCEzDE,MAPf,SAAmBb,GAEf,OACI,+CCIOc,MAPf,SAAqBd,GAEjB,OACI,iDCqEOe,E,kDA5DX,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IACDgB,MAAQ,CACTP,MAAO,WACPQ,YAAa,CACT,CAAER,MAAO,OAAQS,KAAM,KACvB,CAAET,MAAO,QAASS,KAAM,UACxB,CAAET,MAAO,UAAWS,KAAM,aAE9BC,KAAM,CACFV,MAAO,uBACPC,SAAU,mBACVC,KAAM,2UAEVS,MAAO,CACHX,MAAO,YAEXY,QAAS,CACLZ,MAAO,kBAlBA,E,qDAuBT,IAAD,OACL,OACI,kBAAC,IAAD,KACI,kBAACN,EAAA,EAAD,CAAWD,UAAU,yBAAyBE,OAAO,GAEjD,kBAACkB,EAAA,EAAD,CAAQpB,UAAU,gBAAgBqB,GAAG,OAAOC,OAAO,MAE/C,kBAAC,IAAD,CAAMtB,UAAU,WAAWuB,GAAG,KAC1B,kBAACH,EAAA,EAAOI,MAAR,kBAKJ,kBAACJ,EAAA,EAAOK,OAAR,CAAezB,UAAU,WAAW0B,gBAAc,kBAClD,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,iBAChB,kBAACC,EAAA,EAAD,CAAK7B,UAAU,YACX,kBAAC,IAAD,CAAMA,UAAU,WAAWuB,GAAG,KAA9B,QACA,kBAAC,IAAD,CAAMvB,UAAU,WAAWuB,GAAG,UAA9B,SACA,kBAAC,IAAD,CAAMvB,UAAU,WAAWuB,GAAG,YAA9B,cAOZ,kBAAC,IAAD,CAAOP,KAAK,IAAIc,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,CAAUxB,MAAO,EAAKO,MAAMG,KAAKV,MAAOC,SAAU,EAAKM,MAAMG,KAAKT,SAAUC,KAAM,EAAKK,MAAMG,KAAKR,UACtI,kBAAC,IAAD,CAAOO,KAAK,SAASe,OAAQ,kBAAM,kBAAC,EAAD,CAAWxB,MAAO,EAAKO,MAAMI,MAAMX,WACtE,kBAAC,IAAD,CAAOS,KAAK,WAAWe,OAAQ,kBAAM,kBAAC,EAAD,CAAaxB,MAAO,EAAKO,MAAMK,QAAQZ,WAE5E,kBAAC,EAAD,Y,GAtDFyB,IAAMC,WCAJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASR,OACP,kBAAC,IAAMS,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a67789bc.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction Footer() {\n\n    return (\n        // <footer className=\"mt-5\">\n            <footer>\n\n                <Container fluid={true}>\n                    <Row className=\"border-top justify-content-between p-3 bg-dark\">\n                        <Col className=\"p-0 bg-dark text-light\" md={3} sm={12}>\n                            Wizative\n                    </Col>\n                        <Col className=\"p-0 d-flex justify-content-end\" md={3}>\n                            <p>&copy; 2020 Wizative.</p>\n                        </Col>\n                    </Row>\n                </Container>\n            </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\n\nfunction Hero(props) {\n\n    return (\n        <Jumbotron className=\"bg-dark jumbotron-fluid p-0\">\n            <Container fluid={true}>\n                <Row className=\"justify-content-center bg-dark\">\n                    <Col md={8} sm={6}>\n                        { props.title && <h1 className=\"display-4 font-weight-light text-light\">{props.title}</h1> } \n                        { props.subTitle && <h3 className=\"text-light\">{props.subTitle}</h3> } \n                        { props.text && <h5 className=\"display-6 font-weight-light text-light\">{props.text}</h5> } \n\n                    </Col>\n                </Row>\n            </Container>\n\n        </Jumbotron>\n    );\n}\n\nexport default Hero;","import React from 'react';\n\nimport Hero from '../components/Hero';\n\nfunction HomePage(props){\n\n    return(\n        <Hero title={props.title} subTitle={props.subTitle} text={props.text} />\n        );\n}\n\nexport default HomePage;","import React from 'react';\n\nfunction AboutPage(props){\n\n    return(\n        <p>AboutPage Works</p>\n    );\n}\n\nexport default AboutPage;","import React from 'react';\n\nfunction ContactPage(props){\n\n    return(\n        <p>ContactPage Works</p>\n    );\n}\n\nexport default ContactPage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './App.css';\n\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ContactPage from './pages/ContactPage';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: 'Wizative',\n            headerLinks: [\n                { title: 'Home', path: '/' },\n                { title: 'About', path: '/about' },\n                { title: 'Contact', path: '/contact' },\n            ],\n            home: {\n                title: 'Introducing Wizative',\n                subTitle: 'True Empowerment',\n                text: 'Welcome to Wizative, the advanced Software Startup paving the way to the future. We are a team of like-minded and determined individuals, all sharing a vision for success. We believe that our sophisticated technology has the potential to become an industry sensation. Would you like to find out more? Explore our website today.'\n            },\n            about: {\n                title: 'About me'\n            },\n            contact: {\n                title: 'Keep in touch'\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <Container className=\"p-0 bg-dark text-light\" fluid={true}>\n\n                    <Navbar className=\"border-bottom\" bg=\"dark\" expand=\"lg\" >\n\n                        <Link className=\"nav-link\" to=\"/\">\n                            <Navbar.Brand>\n                                Wizative\n                            </Navbar.Brand>\n                        </Link>\n\n                        <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n                        <Navbar.Collapse id=\"navbar-toggle\">\n                            <Nav className=\"ml-auto \">\n                                <Link className=\"nav-link\" to=\"/\">Home</Link>\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\n                                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n\n\n                            </Nav>\n                        </Navbar.Collapse>\n\n                    </Navbar>\n                    <Route path=\"/\" exact render={() => <HomePage title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text} />} />\n                    <Route path=\"/about\" render={() => <AboutPage title={this.state.about.title} />} />\n                    <Route path=\"/contact\" render={() => <ContactPage title={this.state.contact.title} />} />\n\n                    <Footer />\n                </Container>\n            </Router>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}